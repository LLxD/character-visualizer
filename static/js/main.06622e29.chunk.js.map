{"version":3,"sources":["Attr.js","Skills.js","Upload.js","index.js"],"names":["Attr","props","useState","show","setShow","handleClose","setShowCheck","setShowSaving","showCheck","showSaving","rolled","setRolled","rollCheck","mod","check","roll","DiceRoll","output","proficient","proficiencyBonus","className","Modal","onHide","Header","Title","title","Body","Button","variant","onClick","Row","Col","Footer","value","Skills","keys","Object","skills","skillsArray","forEach","key","index","abilityPosition","ability","push","xl","modArray","Container","map","Upload","children","files","setFiles","upload","setUpload","returnMod","accept","type","onChange","e","fileReader","FileReader","readAsText","target","onload","JSON","parse","result","name","data","abilities","str","attributes","prof","dex","con","int","wis","cha","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.06622e29.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { DiceRoll } from \"rpg-dice-roller\";\n\nconst Attr = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n    setShowCheck(false);\n    setShowSaving(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const [showCheck, setShowCheck] = useState(false);\n  const [showSaving, setShowSaving] = useState(false);\n  const [rolled, setRolled] = useState(\"0\");\n\n  const rollCheck = (mod, check) => {\n    let roll;\n    if (check) {\n      roll = new DiceRoll(\"d20\" + mod);\n      setShowCheck(true);\n      setShowSaving(false);\n      setRolled(roll.output);\n    } else {\n      roll = new DiceRoll(\n        \"d20\" + mod + (props.proficient ? `+${props.proficiencyBonus}` : \"+0\")\n      );\n      setShowCheck(false);\n      setShowSaving(true);\n      setRolled(roll.output);\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>VAMO ROLAR {props.title} CARAI!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {!showCheck && !showSaving && (\n            <div>\n              <h4>Quer fazer um Check ou Saving Throw?</h4>\n              <div className=\"d-flex justify-content-center  mt-2\">\n                <Button\n                  className=\"mx-2\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    rollCheck(props.mod, true);\n                  }}\n                >\n                  Check\n                </Button>\n                <Button\n                  className=\"mx-2\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    rollCheck(props.mod, false);\n                  }}\n                >\n                  Saving Throw\n                </Button>\n              </div>\n            </div>\n          )}\n          {showCheck && (\n            <>\n              <Row>\n                <Col>\n                  <h4>RESULTADO: {rolled}</h4>\n                  <div className=\"d-flex justify-content-center  mt-2\">\n                    <Button\n                      variant=\"primary\"\n                      onClick={() => {\n                        rollCheck(props.mod, true);\n                      }}\n                    >\n                      Rerolar\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n            </>\n          )}\n          {showSaving && (\n            <>\n              <Row>\n                <Col>\n                  <h4>RESULTADO: {rolled}</h4>\n                  <div className=\"d-flex justify-content-center  mt-2\">\n                    <Button\n                      variant=\"primary\"\n                      onClick={() => {\n                        rollCheck(props.mod, false);\n                      }}\n                    >\n                      Rerolar\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Fechar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <button\n        className=\"btn\"\n        onClick={() => {\n          handleShow();\n        }}\n      >\n        <div className=\"col text-center\">\n          <h4>{props.title}</h4>\n          <h5>{props.value}</h5>\n          <h5 className=\"border\">{props.mod}</h5>\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default Attr;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst Skills = (props) => {\n  const keys = Object.keys(props.skills);\n  const skillsArray = [];\n  keys.forEach((key, index) => {\n    let ability = props.skills[`${key}`].ability;\n    let abilityPosition;\n    if (ability === \"str\") {\n      abilityPosition = 0;\n    } else if (ability === \"dex\") {\n      abilityPosition = 1;\n    } else if (ability === \"con\") {\n      abilityPosition = 2;\n    } else if (ability === \"int\") {\n      abilityPosition = 3;\n    } else if (ability === \"wis\") {\n      abilityPosition = 4;\n    } else if (ability === \"cha\") {\n      abilityPosition = 5;\n    }\n    let proficient = props.skills[`${key}`].value;\n    skillsArray.push(\n      <>\n        <Col className=\"d-flex\" xl={1}>\n          <h4>{key}</h4>\n          <h6>({ability})</h6>\n        </Col>\n        <Col xl={1}>\n          <h5>\n            {proficient\n              ? props.modArray[abilityPosition] + \"+\" + props.proficiencyBonus\n              : props.modArray[abilityPosition]}\n          </h5>\n        </Col>\n      </>\n    );\n  });\n  return (\n    <div>\n      <Container className=\"d-flex flex-wrap row mt-5 justify-content-center\">\n        <Row>\n          {skillsArray.map((index) => {\n            return index;\n          })}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Skills;\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Attr from \"./Attr\";\nimport Skills from \"./Skills\";\n\nexport function Upload({ children }) {\n  const [files, setFiles] = useState(\"\");\n  const [upload, setUpload] = useState(true);\n\n  const handleChange = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = (e) => {\n      setFiles(JSON.parse(e.target.result));\n      setUpload(false);\n    };\n  };\n\n  const returnMod = (value) => {\n    if (value === 1) {\n      return \"-5\";\n    } else if (value === 2 || value === 3) {\n      return \"-4\";\n    } else if (value === 4 || value === 5) {\n      return \"-3\";\n    } else if (value === 6 || value === 7) {\n      return \"-2\";\n    } else if (value === 8 || value === 9) {\n      return \"-1\";\n    } else if (value === 10 || value === 11) {\n      return \"+0\";\n    } else if (value === 12 || value === 13) {\n      return \"+1\";\n    } else if (value === 14 || value === 15) {\n      return \"+2\";\n    } else if (value === 16 || value === 17) {\n      return \"+3\";\n    } else if (value === 18 || value === 19) {\n      return \"+4\";\n    } else if (value === 20 || value === 21) {\n      return \"+5\";\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <div>\n          {upload && (\n            <>\n              <h1 className=\"mt-5\">Ficha :D</h1>\n              <input\n                accept=\".json\"\n                type=\"file\"\n                onChange={handleChange}\n                className=\"mb-5\"\n              />\n              <br />\n            </>\n          )}\n          {(files === \"\" ? false : true) && (\n            <div>\n              <h3 className=\"mb-3 mt-2\">Nome: {files.name}</h3>\n              <h3 className=\"mb-3\">Habilidades:</h3>\n              <Container>\n                <Row>\n                  <Col>\n                    {\" \"}\n                    <Attr\n                      title={\"STR\"}\n                      value={files.data.abilities.str.value}\n                      mod={returnMod(files.data.abilities.str.value)}\n                      proficient={files.data.abilities.str.proficient}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                  <Col>\n                    {\" \"}\n                    <Attr\n                      title={\"DEX\"}\n                      value={files.data.abilities.dex.value}\n                      mod={returnMod(files.data.abilities.dex.value)}\n                      proficient={files.data.abilities.dex.proficient}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                  <Col>\n                    {\" \"}\n                    <Attr\n                      title={\"CON\"}\n                      value={files.data.abilities.con.value}\n                      mod={returnMod(files.data.abilities.con.value)}\n                      proficient={files.data.abilities.con.proficient}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                  <Col>\n                    {\" \"}\n                    <Attr\n                      title={\"INT\"}\n                      value={files.data.abilities.int.value}\n                      mod={returnMod(files.data.abilities.int.value)}\n                      proficient={files.data.abilities.int.proficient}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                  <Col>\n                    {\" \"}\n                    <Attr\n                      title={\"WIS\"}\n                      value={files.data.abilities.wis.value}\n                      mod={returnMod(files.data.abilities.wis.value)}\n                      proficient={files.data.abilities.wis.proficient}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                  <Col>\n                    {\" \"}\n                    <Attr\n                      title={\"CHA\"}\n                      value={files.data.abilities.cha.value}\n                      mod={returnMod(files.data.abilities.cha.value)}\n                      proficient={files.data.abilities.cha.proficient}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                </Row>\n              </Container>\n              <Container>\n                <Row>\n                  <Col>\n                    <Skills\n                      modArray={[\n                        returnMod(files.data.abilities.str.value),\n                        returnMod(files.data.abilities.dex.value),\n                        returnMod(files.data.abilities.con.value),\n                        returnMod(files.data.abilities.int.value),\n                        returnMod(files.data.abilities.wis.value),\n                        returnMod(files.data.abilities.cha.value),\n                      ]}\n                      skills={files.data.skills}\n                      proficiencyBonus={files.data.attributes.prof}\n                    />\n                  </Col>\n                </Row>\n              </Container>\n              <div className=\"d-flex justify-content-center\">\n                <Button\n                  className=\"mt-5\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    setUpload(!upload);\n                  }}\n                >\n                  Esconder/Abrir Upload\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Upload } from \"./Upload\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Upload>\n        <button>Upload Files</button>\n      </Upload>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}